#ifndef NODE_H
#define NODE_H

#include "types.h"
#include "func.h"

#define COMPUTE_NODE(TYPE_IN,TYPE_OUT) COMPUTE_##TYPE_IN##_##TYPE_OUT##_NODE
#define CREATE_NODE(TYPE_IN,TYPE_OUT) CREATE_##TYPE_IN##_##TYPE_OUT##_NODE
#define FREE_NODE(TYPE_IN,TYPE_OUT) FREE_##TYPE_IN##_##TYPE_OUT##_NODE

#define COMPUTE_NODE_FUNC(TYPE_IN,TYPE_OUT) \
void COMPUTE_NODE(TYPE_IN,TYPE_OUT)(NODE_T(TYPE_IN,TYPE_OUT) *node)

#define DECLARE_COMPUTE_NODE_FUNC(TYPE_IN,TYPE_OUT) \
COMPUTE_NODE_FUNC(TYPE_IN,TYPE_OUT);

#define CREATE_NODE_FUNC(TYPE_IN,TYPE_OUT)  \
NODE_T(TYPE_IN,TYPE_OUT)* CREATE_NODE(TYPE_IN,TYPE_OUT)(const uintmax_t num_in, const uintmax_t num_out, COMPUTE_T(TYPE_IN,TYPE_OUT) func)

#define DECLARE_CREATE_NODE_FUNC(TYPE_IN,TYPE_OUT) \
CREATE_NODE_FUNC(TYPE_IN,TYPE_OUT);

#define FREE_NODE_FUNC(TYPE_IN,TYPE_OUT)    \
void FREE_NODE(TYPE_IN,TYPE_OUT)(NODE_T(TYPE_IN,TYPE_OUT) *node)

#define DECLARE_FREE_NODE_FUNC(TYPE_IN,TYPE_OUT)    \
FREE_NODE_FUNC(TYPE_IN,TYPE_OUT);

#define DECLARE_NODE(TYPE_IN,TYPE_OUT)         \
DECLARE_COMPUTE_NODE_FUNC(TYPE_IN,TYPE_OUT)    \
DECLARE_CREATE_NODE_FUNC(TYPE_IN,TYPE_OUT)     \
DECLARE_FREE_NODE_FUNC(TYPE_IN, TYPE_OUT)

DECLARE_NODE(float,float)

#endif
